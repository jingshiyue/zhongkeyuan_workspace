# coding:utf-8
# Author 陈克云 ：2018.10.12
"""
利用数据写入旅客值机信息和旅客信息 直接调用接口完成数据的批量构造
"""
from Airport.test_预安检人票验证 import *
from Airport.test_预安检口人脸验证 import api_v1_face_pre_security_check
from Airport.test_安检口 import api_v1_face_security_check
from Airport.test_复核口验证 import api_v1_face_review_check


if __name__ == '__main__':
    from Airport.数据库测试.idcard import idcard
    features_1_1 = ""
    features_1_N = "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"

    m1 = to_base64(r"D:\work file\project\zhihuipanshi\chenkeyunli_gaitubao_com_320x240.jpg")
    m2 = to_base64(r"D:\work file\project\zhihuipanshi\chenkeyunli_gaitubao_com_320x240.jpg")
    for xu in range(300000, 600000):
        body_data = {"reqId": get_uuid(),
                     "flightNo": "LK"+str(xu),
                     "flightDay": "13",
                     "QTCode": "abcde",
                     "seatId": "3B",
                     "startPort": "HET",
                     "boardingNumber": "200"}
        ticket_check(body_data)  # 发送请求进行验票

        body_data_a = {"reqId": get_uuid(),
                       "gateNo": "atYA-A",
                       "deviceId": "SB013",
                       "cardType": 0,  # 证件类型 int
                       "idCard": idcard[xu],
                       "nameZh": "name"+str(xu),
                       "nameEn": "passenger_english_name",
                       "age": get_age(idcard[xu]),  # int  通过身份证证件号码获取旅客年龄
                       "sex": 0,  # int  获取一致的性别信息
                       "birthDate": get_birthday(idcard[xu]),  # 通过前面生成的身份号码获取生日信息
                       "address": "北京市优衣库",
                       "certificateValidity": "0-20191206",  # 时间yyyymmdd或者长期(起-止)
                       "nationality": "中国",
                       "ethnic": "汉族",
                       "contactWay": "13512134390",
                       "scenePhoto": m2,
                       "sceneFeature": features_1_1,
                       "cardPhoto": m1,
                       "cardFeature": features_1_1,
                       "flightNo": "LK"+str(xu),
                       "flightDay": 13,
                       "QTCode": "abcde",
                       "seatId": "3B",
                       "startPort": "HET",
                       "boardingNumber": "200",
                       "fId": get_uuid()}

        api_v1_face_pre_security_check(body_data_a)   # 发送预安检人脸验
        # 进行安检口1:1
        body_data_b = {"reqId": get_uuid(),
                       "gateNo": "atAJ-A",
                       "deviceId": "SB012",
                       "cardType": 0,  # 证件类型 int
                       "idCard": idcard[xu],
                       "nameZh": "name"+str(xu),
                       "nameEn": "passenger_english_name",
                       "age": get_age(idcard[xu]),  # int
                       "sex": 0,  # int
                       "birthDate": get_birthday(idcard[xu]),
                       "address": "北京市优衣库",
                       "certificateValidity": "0-20191206",  # 时间yyyymmdd或者长期(起-止)
                       "nationality": "中国",
                       "ethnic": "汉族",
                       "contactWay": "13512134390",
                       "scenePhoto": m2,
                       "sceneFeature": features_1_1,
                       "cardPhoto": m1,
                       "cardFeature": features_1_1}
        # 发送请求
        api_v1_face_security_check(body_data_b)
        time.sleep(2)
        # 进行安检复核
        body_data_c = {"reqId": get_uuid(),
                       "gateNo": "atAF-A",
                       "deviceId": "SB011",
                       "scenePhoto": m1,
                       "sceneFeature": features_1_N}
        # 发送请求
        api_v1_face_review_check(body_data_c)