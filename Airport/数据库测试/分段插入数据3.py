# coding:utf-8
# Author 陈克云 ：2018.10.12
"""
利用数据写入旅客值机信息和旅客信息 直接调用接口完成数据的批量构造
"""
from Airport.test_预安检人票验证 import *
from Airport.test_预安检口人脸验证 import api_v1_face_pre_security_check
from Airport.test_安检口 import api_v1_face_security_check
from Airport.test_复核口验证 import api_v1_face_review_check


if __name__ == '__main__':
    from Airport.数据库测试.idcard import idcard
    features_1_1 = ""
    features_1_N = "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"

    m1 = to_base64(r"D:\work file\project\zhihuipanshi\chenkeyunli_gaitubao_com_600x800.jpg")
    m2 = to_base64(r"D:\work file\project\zhihuipanshi\chenkeyunli_gaitubao_com_600x800.jpg")
    for xu in range(600000, 980000):
        body_data = {"reqId": get_uuid(),
                     "flightNo": "LK"+str(xu),
                     "flightDay": "13",
                     "QTCode": "abcde",
                     "seatId": "3B",
                     "startPort": "HET",
                     "boardingNumber": "200"}
        ticket_check(body_data)  # 发送请求进行验票

        body_data_a = {"reqId": get_uuid(),
                       "gateNo": "atYA-A",
                       "deviceId": "SB013",
                       "cardType": 0,  # 证件类型 int
                       "idCard": idcard[xu],
                       "nameZh": "name"+str(xu),
                       "nameEn": "passenger_english_name",
                       "age": get_age(idcard[xu]),  # int  通过身份证证件号码获取旅客年龄
                       "sex": 0,  # int  获取一致的性别信息
                       "birthDate": get_birthday(idcard[xu]),  # 通过前面生成的身份号码获取生日信息
                       "address": "北京市优衣库",
                       "certificateValidity": "0-20191206",  # 时间yyyymmdd或者长期(起-止)
                       "nationality": "中国",
                       "ethnic": "汉族",
                       "contactWay": "13512134390",
                       "scenePhoto": m2,
                       "sceneFeature": features_1_1,
                       "cardPhoto": m1,
                       "cardFeature": features_1_1,
                       "flightNo": "LK"+str(xu),
                       "flightDay": 13,
                       "QTCode": "abcde",
                       "seatId": "3B",
                       "startPort": "HET",
                       "boardingNumber": "200",
                       "fId": get_uuid()}

        api_v1_face_pre_security_check(body_data_a)   # 发送预安检人脸验
        # 进行安检口1:1
        body_data_b = {"reqId": get_uuid(),
                       "gateNo": "atAJ-A",
                       "deviceId": "SB012",
                       "cardType": 0,  # 证件类型 int
                       "idCard": idcard[xu],
                       "nameZh": "name"+str(xu),
                       "nameEn": "passenger_english_name",
                       "age": get_age(idcard[xu]),  # int
                       "sex": 0,  # int
                       "birthDate": get_birthday(idcard[xu]),
                       "address": "北京市优衣库",
                       "certificateValidity": "0-20191206",  # 时间yyyymmdd或者长期(起-止)
                       "nationality": "中国",
                       "ethnic": "汉族",
                       "contactWay": "13512134390",
                       "scenePhoto": m2,
                       "sceneFeature": features_1_1,
                       "cardPhoto": m1,
                       "cardFeature": features_1_1}
        # 发送请求
        api_v1_face_security_check(body_data_b)
        time.sleep(2)
        # 进行安检复核
        body_data_c = {"reqId": get_uuid(),
                       "gateNo": "atAF-A",
                       "deviceId": "SB011",
                       "scenePhoto": m1,
                       "sceneFeature": features_1_N}
        # 发送请求
        api_v1_face_review_check(body_data_c)