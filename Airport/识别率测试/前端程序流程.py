# coding:utf-8
from Airport.msgQueue.Autosendlk import *
from Airport.test_预安检人票验证 import *
from Airport.test_预安检口人脸验证 import api_v1_face_pre_security_check
from Airport.test_安检口 import api_v1_face_security_check

if __name__ == '__main__':
    lk_date = produce_flight_date()
    while True:
        # 开始发送旅客信息（航班值机信息） 模拟安检系统
        send_lkxx(lk_bdno="780",  # 生成随机的101-999的序列号
                  lk_cardid="410900197211269910",  # 生成随机的正确的身份证号码
                  lk_chkt=get_flight_out_time(),  # 在当前时间上加上对应的延迟时间作为起飞时间
                  lk_cname="申皓",  # 生成人员姓名
                  lk_date=lk_date,  # 以当前时间生成航班日期
                  lk_desk=get_lk_desk(),  # 随机生成正确的航班目的地
                  lk_flight="MK001",  # 累加生成航班号码
                  lk_id=get_time_stamp(),  # 累加生成旅客id
                  lk_inf="INF",  # 是否带婴儿
                  lk_insur="0",  # 设置是否购买保险 设置是否购买保险 随机数
                  lk_sex="1",  # 随机性别
                  lk_vip="1"  # 随机贵宾是否是贵宾 0不是  1是  2未知
                  )
        # 验票需要的参数  比对lk_flight 和 li_date
        time.sleep(0.5)
        body_data = {"reqId": get_uuid(),
                     "flightNo": "MK001",
                     "flightDay": str(lk_date[6:8]),
                     "QTCode": "abcde",
                     "seatId": "1",
                     "startPort": "HET",
                     "boardingNumber": "780"}
        # 发送请求进行验票
        ticket_check(body_data)
        features_1_1 = ""
        m1 = to_base64(r"C:\Users\admin\Desktop\申皓 - 副本.jpg")
        # 发送预安检人脸验证
        body_data_a = {"reqId": get_uuid(),
                       "gateNo": "atYA-A",
                       "deviceId": "SB001",
                       "cardType": 0,  # 证件类型 int
                       "idCard": "410900197211269910",
                       "nameZh": "申皓",
                       "nameEn": "englishName",
                       "age": get_age("410900197211269910"),  # int  通过身份证证件号码获取旅客年龄
                       "sex": 1,  # int  获取一致的性别信息
                       "birthDate": get_birthday("410900197211269910"),  # 通过前面生成的身份号码获取生日信息
                       "address": "重庆市智慧杭实验室",
                       "certificateValidity": "%s-20201212" % get_birthday("410900197211269910"),  # 时间yyyymmdd或者长期(起-止)
                       "nationality": "中国",
                       "ethnic": "汉族",
                       "contactWay": "13512134390",
                       "scenePhoto": m1,
                       "sceneFeature": features_1_1,
                       "cardPhoto": m1,
                       "cardFeature": features_1_1,
                       "flightNo": "MK001",
                       "flightDay": str(lk_date[6:8]),
                       "QTCode": "abcde",
                       "seatId": "1",
                       "startPort": "HET",
                       "boardingNumber": "780",
                       "fId": get_uuid()}

        # 发送请求
        api_v1_face_pre_security_check(body_data_a)
        time.sleep(1)
        # 进行安检口1:1
        body_data_b = {"reqId": get_uuid(),
                       "gateNo": "atYA-A",
                       "deviceId": "SB001",
                       "cardType": 0,  # 证件类型 int
                       "idCard": "410900197211269910",
                       "nameZh": "申皓",
                       "nameEn": "englishName",
                       "age": get_age("410900197211269910"),  # int
                       "sex": 1,  # int
                       "birthDate": get_birthday("410900197211269910"),
                       "address": "重庆市智慧杭实验室",
                       "certificateValidity": "%s-20201212" % get_birthday("410900197211269910"),  # 时间yyyymmdd或者长期(起-止)
                       "nationality": "中国",
                       "ethnic": "汉族",
                       "contactWay": "13512134390",
                       "scenePhoto": m1,
                       "sceneFeature": features_1_1,
                       "cardPhoto": m1,
                       "cardFeature": features_1_1}
        # 发送请求
        api_v1_face_security_check(body_data_b)
        time.sleep(1)
        break
    pass
